{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 252.0,
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				"package control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: Install",
				"Package Control: Install Package"
			],
			[
				"rope",
				"Preferences: Browse Packages"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				":W",
				":w - Save"
			],
			[
				":q",
				"Set Syntax: SQL"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"from ginn.framework import pclases",
			"cd ginn",
			"from framework import pclases",
			"print(__name__)",
			"print(__version__)",
			"print __version__",
			"print(\"a\")",
			"print \"a\"",
			"print 'a';",
			"print 'a'",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/queen/Geotexan/src/Geotex-INN/ginn/informes/geninformes.py",
		"/home/queen/Geotexan/src/Geotex-INN/extra/scripts/detectar_albaranes_mal_facturados.py",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/formularios/albaranes_de_salida.py",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/formularios/facturas_venta.py",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/formularios/presupuestos.py",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/presupuestos.html",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/formularios/presupuesto.glade",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/prefacturas.html",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/consulta_pendientes_recibir.html",
		"/home/queen/Geotexan/src/Geotex-INN/db/populate.sql",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/facturas_venta.html",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/informes/factura_multipag.py",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/facturas_compra.html",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/fixedpoint.html",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/geninformes.html",
		"/home/queen/Geotexan/src/Geotex-INN/geotexan.vim",
		"/home/queen/Geotexan/src/Geotex-INN/GPL",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/formularios/resultados_elongacion.glade",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/resultados_elongacion.html",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/resultados_longitudinal.html",
		"/home/queen/Geotexan/src/Geotex-INN/README",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/albaranes_de_salida.html",
		"/home/queen/Geotexan/src/Geotex-INN/doc/pydoc/albaranes_de_entrada.html",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/informes/albaran_multipag.py",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/lib/odfpy/APACHE-LICENSE-2.0.txt",
		"/home/queen/Geotexan/src/Geotex-INN/db/ajuste_consumos.py",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/lib/odfpy/odf2mht/odf2mht",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/lib/odfpy/odf/office.py",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/formularios/consulta_ofertas_estudio.glade",
		"/home/queen/Geotexan/src/Geotex-INN/ginn/formularios/consulta_ofertas.glade",
		"/home/bogado/Geotexan/src/Geotex-INN/geotexan.sublime-project",
		"/tmp/detectar_albaranes_mal_facturados.txt",
		"/home/bogado/Geotexan/src/Geotex-INN/db/tablas.sql",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/tipos_material.html",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/lib/tmp-cmd.py",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/lib/odfpy/tests/examples/parastyles.odt",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/lib/odfpy/tests/examples/definitionlists.odt",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/lib/odfpy/tests/examples/headerfooter.odt",
		"/home/bogado/Geotexan/src/Geotex-INN/db/_tablas.sql",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/formularios/pagares_cobros.py",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/formularios/confirmings.py",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/formularios/utils.py",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/framework/pclases/cliente.py",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/formularios/checklist_window.py",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/framework/tests.py",
		"/home/bogado/Geotexan/src/Geotex-INN/TODO",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/framework/pclases/__init__.py",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/confirmings.html",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/consulta_facturas_sin_doc_pago.html",
		"/home/bogado/Geotexan/src/Geotex-INN/extra/install/softwin python 2.7/pyserial-2.6/examples/wxSerialConfigDialog.py",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/formularios/confirmings.glade",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/configuracion.html",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/cuentas_origen.html",
		"/home/bogado/Geotexan/src/Geotex-INN/COPYING",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/utils.html",
		"/home/bogado/Geotexan/src/Geotex-INN/extra/patches/upgrade_db_to_3_9.py",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/usuarios.html",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/formularios/pagares_cobros.glade",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/pagares_pagos.html",
		"/home/bogado/Geotexan/src/Geotex-INN/doc/pydoc/pagares_cobros.html",
		"/home/bogado/Geotexan/src/Geotex-INN/extra/install/softwin python 2.7/pyserial-2.6/documentation/pyserial_api.rst",
		"/home/bogado/Geotexan/src/Geotex-INN/db/populate.sql",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/lib/odfpy/odf2mht/odf2mht",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/formularios/consulta_ofertas_pendientes_validar.glade",
		"/home/bogado/Geotexan/src/Geotex-INN/ginn/lib/odfpy/odf/opendocument.py",
		"/home/bogado/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/bogado/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"select_correo_validador",
			"nueva oferta",
			"enviar_correoe",
			"enviar_correo",
			"obra",
			"alta obra",
			"hacer_pedido",
			"enviar_correo_adjudicada",
			"crear_obra",
			"Obra(",
			"imprimir_factura",
			"generar_factura",
			"crear_obra",
			"direccion = ",
			"cbe_nom",
			"Destino.select(",
			"obra",
			".obra",
			"obra",
			"cbe_nom",
			"mostrar_destino",
			"combo_destino_cambiado",
			"_destino",
			".direccion = ",
			"\\.direccion = ",
			"albaran.direccion = ",
			"e_direccion",
			" ",
			"aproximadamente 0 de ",
			"for ldv in alb.lineasDeVenta:\n            pv = ldv.productoVenta\n            if pv != None and (pv.es_bala() or pv.es_bala_cable() or pv.es_bigbag() or pv.es_rollo()):\n                if pv not in pvs:\n                    pvs[pv] = [ldv.cantidad, 0.0]\n                else:\n                    pvs[pv][0] += ldv.cantidad\n        for articulo in alb.articulos + [ldd.articulo \n                                         for ldd in alb.lineasDeDevolucion]:\n            pv = articulo.productoVenta\n            if pv.es_rollo():\n                cantidad_articulo = articulo.superficie\n            elif pv.es_bala() or pv.es_bala_cable() or pv.es_bigbag() or pv.es_caja() or pv.es_rollo_c():\n                cantidad_articulo = articulo.peso\n            else:\n                print >> sys.stderr, \"Artículo ID %d no es bala [cable], rollo [defectuoso] ni bigbag.\" % (articulo.id)\n                continue\n            if pv not in pvs:\n                pvs[pv] = [0.0, cantidad_articulo]\n            else:\n                pvs[pv][1] += cantidad_articulo\n        for pv in pvs:\n            if round(pvs[pv][0], 2) != round(pvs[pv][1], 2):\n                print >> sys.stderr, \"El albarán ID %d (%s) tiene como cantidad total de %s, %s en líneas de venta y %s en artículos.\" % (\n                    alb.id, alb.numalbaran, pv.descripcion, utils.float2str(pvs[pv][0]), utils.float2str(pvs[pv][1]))\n                res = False",
			"aproximadamente 0 de ",
			"print",
			"for ldv in alb.lineasDeVenta:\n            pv = ldv.productoVenta\n            if pv != None and (pv.es_bala() or pv.es_bala_cable() or pv.es_bigbag() or pv.es_rollo()):\n                if pv not in pvs:\n                    pvs[pv] = [ldv.cantidad, 0.0]\n                else:\n                    pvs[pv][0] += ldv.cantidad\n        for articulo in alb.articulos + [ldd.articulo \n                                         for ldd in alb.lineasDeDevolucion]:\n            pv = articulo.productoVenta\n            if pv.es_rollo():\n                cantidad_articulo = articulo.superficie\n            elif pv.es_bala() or pv.es_bala_cable() or pv.es_bigbag() or pv.es_caja() or pv.es_rollo_c():\n                cantidad_articulo = articulo.peso\n            else:\n                print >> sys.stderr, \"Artículo ID %d no es bala [cable], rollo [defectuoso] ni bigbag.\" % (articulo.id)\n                continue\n            if pv not in pvs:\n                pvs[pv] = [0.0, cantidad_articulo]\n            else:\n                pvs[pv][1] += cantidad_articulo\n        for pv in pvs:\n            if round(pvs[pv][0], 2) != round(pvs[pv][1], 2):\n                print >> sys.stderr, \"El albarán ID %d (%s) tiene como cantidad total de %s, %s en líneas de venta y %s en artículos.\" % (\n                    alb.id, alb.numalbaran, pv.descripcion, utils.float2str(pvs[pv][0]), utils.float2str(pvs[pv][1]))\n                res = False",
			"comprobar_cantidades_albaran",
			"def calcular_credito_disponible(",
			"def calcular_credito",
			"def calcular_credito_disponible(",
			"calcular_credito_disponible(",
			"inhabilitado",
			"combo_set_from_db(self.wids['cbe_cliente']",
			"combo_set_from_db(.*cbe_cliente",
			"combo_set_from_db",
			"cbe_cliente",
			"Cliente.select(",
			"combo_set_from_db",
			"cbe_cliente",
			"def rellenar_widgets",
			"buscar_cliente",
			"Cliente.select(",
			"buscar_cliente",
			"Cliente.select("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "geotexan.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"presupuestos.py",
				"ginn/formularios/presupuestos.py"
			],
			[
				"factura_venta.py",
				"ginn/formularios/facturas_venta.py"
			],
			[
				"geninformes.py",
				"ginn/informes/geninformes.py"
			],
			[
				"albaranes_de_salida.py",
				"ginn/formularios/albaranes_de_salida.py"
			],
			[
				"tests",
				"ginn/framework/tests.py"
			],
			[
				"confirmings.py",
				"ginn/formularios/confirmings.py"
			],
			[
				"confirmin",
				"ginn/formularios/confirmings.py"
			],
			[
				"utils.py",
				"ginn/formularios/utils.py"
			],
			[
				"pagares",
				"ginn/formularios/pagares_cobros.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
